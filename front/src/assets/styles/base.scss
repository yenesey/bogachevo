//
// NOTE: this vars/mixins available for each component <style> section
//       over webpack.config.js rule for "sass-loader"
//       opions.data: `@import "@/assets/styles/base.scss";`


//------------------ Responsible grid -----------------

// breakpoints map
$BREAKPOINTS: (
  xs: 32rem,
  sm: 48rem,
  md: 72rem,
  lg: 96rem,
  xl: 102rem,
  xx: 120rem
);

// number of columns variable
$COLUMN-COUNT: 12;

// media query mixin
@mixin break($size, $min-max: 'max') {
  $_size: if(type-of($size) == number, $size , map-get($BREAKPOINTS, $size));
  @media (#{$min-max}-width: $_size) {
    @content;
  }
}


//------------------ Transform mixins-----------------
// generic transform
@mixin transform($transforms) {
    -moz-transform: $transforms;
      -o-transform: $transforms;
     -ms-transform: $transforms;
 -webkit-transform: $transforms;
       transform: $transforms;
}

//transform origin
@mixin transform-origin ($origin) {
 -moz-transform-origin: $origin;
      -o-transform-origin: $origin;
     -ms-transform-origin: $origin;
 -webkit-transform-origin: $origin;
       transform-origin: $origin;
}

@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}));
}

@mixin scale($scale) {
  @include transform(scale($scale));
} 

@mixin translate ($x, $y) {
  @include transform(translate($x, $y));
}

@mixin translateY ($y) {
  @include transform(translateY($y));
}
@mixin translateX ($x) {
  @include transform(translateX($x));
}

@mixin skew ($x, $y) {
  @include transform(skew(#{$x}, #{$y}));
}

@mixin perspective ($pers) {
  -o-perspective: $pers;
  -moz-perspective: $pers;
//  -ms-perspective: $pers;
  -webkit-perspective: $pers;
  perspective: $pers;
}

//------------------  Transition mixins --------------------

@mixin transition($transition...) {
  -moz-transition:    $transition;
  -o-transition:      $transition;
  -webkit-transition: $transition;
  transition:         $transition;
}
@mixin transition-property($property...) {
  -moz-transition-property:    $property;
  -o-transition-property:      $property;
  -webkit-transition-property: $property;
  transition-property:         $property;
}
@mixin transition-duration($duration...) {
  -moz-transition-property:    $duration;
  -o-transition-property:      $duration;
  -webkit-transition-property: $duration;
  transition-property:         $duration;
}
@mixin transition-timing-function($timing...) {
  -moz-transition-timing-function:    $timing;
  -o-transition-timing-function:      $timing;
  -webkit-transition-timing-function: $timing;
  transition-timing-function:         $timing;
}
@mixin transition-delay($delay...) {
  -moz-transition-delay:    $delay;
  -o-transition-delay:      $delay;
  -webkit-transition-delay: $delay;
  transition-delay:         $delay;
}



//------------------Keyframe animation mixins-------------------

@mixin keyframes($name) {
  @-o-keyframes $name { @content };
  @-moz-keyframes $name { @content };
  @-webkit-keyframes $name { @content }; 
  @-keyframes $name { @content };
}

@mixin animation-name($name...) {
  -o-animation-name: $name;
  -moz-animation-name: $name;
  -webkit-animation-name: $name;
  animation-name: $name;
}
@mixin animation-duration($duration...) {
  -o-animation-duration: $duration;
  -moz-animation-duration: $duration;
  -webkit-animation-duration: $duration;
  animation-duration: $duration;
}
@mixin animation-duration($duration...) {
  -o-animation-duration: $duration;
  -moz-animation-duration: $duration;
  -webkit-animation-duration: $duration;
  animation-duration: $duration;
}
@mixin animation-timing-function($timing...) {
  -o-animation-timing-function: $timing;
  -moz-animation-timing-function: $timing;
  -webkit-animation-timing-function: $timing;
  animation-timing-function: $timing;
}
@mixin animation-iteration-count($count...) {
  -o-animation-iteration-count: $count;
  -moz-animation-iteration-count: $count;
  -webkit-animation-iteration-count: $count;
  animation-iteration-count: $count;
}
@mixin animation-direction($direction...) {
  -o-animation-direction: $direction;
  -moz-animation-direction: $direction;
  -webkit-animation-direction: $direction;
  animation-direction: $direction;
}
@mixin animation-fill-mode($fill...) {
  -o-animation-fill-mode: $fill;
  -moz-animation-fill-mode: $fill;
  -webkit-animation-fill-mode: $fill;
  animation-fill-mode: $fill;
}
@mixin animation-play-state($state...) {
  -o-animation-play-state: $state;
  -moz-animation-play-state: $state;
  -webkit-animation-play-state: $state;
  animation-play-state: $state;
}

@mixin animation($animation...) {
  -o-animation: $animation;
  -moz-animation: $animation;
  -webkit-animation: $animation;
  animation: $animation;
}

//------------------Link animation mixin-------------------

@mixin animated-link($color, $hover-color, $shadow-size: 1px) {

  text-decoration: none;
  color: $color;

  &:hover {
    color: $hover-color;
  }
  
  &:after {
    content: '';
    margin: auto;
    display: block;
    height: $shadow-size;
    width: 0;
    @include transition(width .3s cubic-bezier(0.39, 0.575, 0.565, 1), transform .3s cubic-bezier(0.39, 0.575, 0.565, 1),  background-color .3s cubic-bezier(0.39, 0.575, 0.565, 1));
  }
  
  &:hover:after {
    width: 100%;
    background-color: $hover-color;
  }
}